# ***************************************************************************
# Broadcom Proprietary and Confidential. (c)2016 Broadcom. All rights reserved.
#
# THIS SOFTWARE MAY ONLY BE USED SUBJECT TO AN EXECUTED SOFTWARE LICENSE
# AGREEMENT  BETWEEN THE USER AND BROADCOM.  YOU HAVE NO RIGHT TO USE OR
# EXPLOIT THIS MATERIAL EXCEPT SUBJECT TO THE TERMS OF SUCH AN AGREEMENT.
#
# ***************************************************************************

# SRAM_ADDR and SRAM_STACK tells the FSBL where and how much sram it has
# to play with.  The FSBL text is loaded at SRAM_ADDR and its stack top is
# indicated by SRAM_STACK. The size of the sram is implied by the two values
# being at the extents of the total sram available.
#
# The MCB tables for DDR 'shmooing' are loaded after the FSBL code so take
# care with stack sizes as this grows down toward the temporary area used 
# by the MCB data.
gset SRAM_ADDR		0xffe00000
gset SRAM_LEN		0x10000
gset SRAM_STACK		0xffe10000

cset CHIP_TYPICAL_FREQUENCY 1503000000UL
cset CHIP_REFCLOCK_FREQUENCY 54000000UL

gset CFG_ARCH_ARM 1
gset ARM_V7 1
gset USE_THUMB 1

# Set lowest address of the first DDR
gset DDR0_BASE		0x0

# Set default for (Linux) load address
# and default maximum to load
gset BOOT_START_ADDRESS $DDR0_BASE+0x8000
gset BOOT_AREA_SIZE     0x2000000 /* 32MB */

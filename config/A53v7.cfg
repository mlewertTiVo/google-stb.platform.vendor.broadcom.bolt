# ***************************************************************************
# Broadcom Proprietary and Confidential. (c)2017 Broadcom. All rights reserved.
#
# THIS SOFTWARE MAY ONLY BE USED SUBJECT TO AN EXECUTED SOFTWARE LICENSE
# AGREEMENT  BETWEEN THE USER AND BROADCOM.  YOU HAVE NO RIGHT TO USE OR
# EXPLOIT THIS MATERIAL EXCEPT SUBJECT TO THE TERMS OF SUCH AN AGREEMENT.
#
# ***************************************************************************

# SRAM_ADDR and SRAM_STACK tells the FSBL where and how much SRAM it has
# to play with. The FSBL text is loaded at SRAM_ADDR and its stack top is
# indicated by SRAM_STACK. The size of the SRAM is implied by the two values
# being at the extents of the total SRAM available to FSBL. Values above
# SRAM_STACK in this case (as indicated by SRAM_LEN+SRAM_ADDR > SRAM_STACK)
# are not to be used for FSBL code or data.

# 96KiB SRAM, memsys offset at 56KiB
gset SRAM_ADDR		0x00100000
gset SRAM_LEN		0x00018000

cset CHIP_TYPICAL_FREQUENCY 1503000000UL
cset CHIP_REFCLOCK_FREQUENCY 54000000UL

gset CFG_ARCH_ARM 1
gset ARM_V7 1
gset USE_THUMB 1
gset ARM_V8 1

# Set lowest address of the first DDR
gset DDR0_BASE		0x40000000

# Set default for (Linux) load address
# and default maximum to load
gset BOOT_START_ADDRESS $DDR0_BASE+0x80000
gset BOOT_AREA_SIZE     0x2000000 /* 32MB */

# If the load and boot commands don't specify a different value for
# BOOT_START_ADDRESS then subsitute BOOT_START_ADDRESS_ZIMAGE
# instead for zImage booting only. If undefined (comment out the
# below 'gset') then BOOT_START_ADDRESS is always the default
# value for all file loaders.
gset BOOT_START_ADDRESS_ZIMAGE $DDR0_BASE+0x8000
